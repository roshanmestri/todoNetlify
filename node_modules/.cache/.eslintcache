[{"/Users/mac/Desktop/todo-front/todoNetlify/src/index.js":"1","/Users/mac/Desktop/todo-front/todoNetlify/src/App.js":"2","/Users/mac/Desktop/todo-front/todoNetlify/src/reportWebVitals.js":"3","/Users/mac/Desktop/todo-front/todoNetlify/src/component/Todos.jsx":"4","/Users/mac/Desktop/todo-front/todoNetlify/src/component/SignUpUser.jsx":"5","/Users/mac/Desktop/todo-front/todoNetlify/src/component/Login.jsx":"6","/Users/mac/Desktop/todo-front/todoNetlify/src/component/UserProfile.jsx":"7","/Users/mac/Desktop/todo-front/todoNetlify/src/component/Todo.jsx":"8","/Users/mac/Desktop/todo-front/todoNetlify/src/contexts/TodosContext.jsx":"9","/Users/mac/Desktop/todo-front/todoNetlify/src/component/TodoCard.jsx":"10","/Users/mac/Desktop/todo-front/todoNetlify/src/Invoice/InvoiceContext/invoiceContext.js":"11"},{"size":535,"mtime":1679399397157,"results":"12","hashOfConfig":"13"},{"size":1004,"mtime":1679574025606,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1679399397157,"results":"15","hashOfConfig":"13"},{"size":3562,"mtime":1679578065235,"results":"16","hashOfConfig":"13"},{"size":1911,"mtime":1679399397155,"results":"17","hashOfConfig":"13"},{"size":1846,"mtime":1679569910443,"results":"18","hashOfConfig":"13"},{"size":350,"mtime":1679399397156,"results":"19","hashOfConfig":"13"},{"size":2469,"mtime":1679574310547,"results":"20","hashOfConfig":"13"},{"size":813,"mtime":1679573228054,"results":"21","hashOfConfig":"13"},{"size":2653,"mtime":1679638824153,"results":"22","hashOfConfig":"13"},{"size":872,"mtime":1679399397155,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1euomqf",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Desktop/todo-front/todoNetlify/src/index.js",[],[],[],"/Users/mac/Desktop/todo-front/todoNetlify/src/App.js",["61"],[],"import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router , Routes , Route  } from \"react-router-dom\"\nimport Todos from './component/Todos';\nimport Todo from './component/Todo';\nimport TodosContextProvider from './contexts/TodosContext'\nimport SignUpUser from './component/SignUpUser';\nimport Login from './component/Login';\nimport UserProfile from './component/UserProfile';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodosContextProvider>\n      <Router>\n        <Routes>\n          {/* <Route path='/auth' element={<NavBar/>}/> */}\n          <Route path='/' element= {<Todos/>}/>\n          <Route path='/todos/:id' element={<Todo/>}/>\n          <Route path='/register' element={<SignUpUser/>}/>\n          <Route path='/login' element={<Login/>}/>\n          <Route path='/profile' element={<UserProfile/>}/>\n        </Routes>\n      </Router>\n      </TodosContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mac/Desktop/todo-front/todoNetlify/src/reportWebVitals.js",[],[],"/Users/mac/Desktop/todo-front/todoNetlify/src/component/Todos.jsx",["62","63","64","65","66"],[],"import React, { useEffect, useState } from \"react\";\n\nimport { CircularProgress, Link } from \"@material-ui/core\";\n\nimport axios from \"axios\";\nimport TodoCard from \"../component/TodoCard\";\nimport { todosContext } from \"../contexts/TodosContext\";\nimport { UseTodo } from \"../contexts/TodosContext\"\nimport { useNavigate } from \"react-router-dom\";\nimport { Navbar, Row } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nfunction Todos() {\n  const navigate = useNavigate();\n  let { todos, getTodosData } = UseTodo(); //has value =todos\n  // const [todos, setTodos] = useState({})\n  const [TodoForm, setTodoForm] = useState({\n    title: \"\",\n    userId: \"\",\n    isCompleted: \"\",\n  });\n  console.log(todos);\n\n  function handle(e) {\n    const newData = { ...TodoForm };\n    newData[e.target.id] = e.target.value;\n    setTodoForm(newData);\n    console.log(newData);\n  }\n\n  function Onsubmit(e) {\n    e.preventDefault();\n    axios\n\n    //Post Request and saving Item in react state\n      .post(\"https://jsonplaceholder.typicode.com/todos\", {\n        userId: TodoForm.userId,\n        title: TodoForm.title,\n        completed: TodoForm.isCompleted,\n      })\n      .then((res) => {\n        console.log(\"helllo \", res.data);\n        getTodosData();\n      });\n      console.log(\"Post Item Data\", TodoForm);\n  }\n\n  function getAll() {}\n\n  return (\n    <>\n      {/* <button onClick={() => navigate('/login')}>Sign In</button> */}\n     <Navbar style={{display:\"flex\" ,justifyContent:\"center\" ,fontWeight:\"700px\" , fontSize:\"3rem\" ,backgroundColor:\"lightBlue\"}}>Todolist React app</Navbar>\n      <form\n        action=\"/todos\"\n        method=\"POST\"\n        onSubmit={(e) => Onsubmit(e)}\n        style={{ marginTop: \"70px\" }}\n      >\n        <div>\n          <label htmlFor=\"\">Title</label>\n          <input\n            onChange={(e) => handle(e)}\n            id=\"title\"\n            value={TodoForm.title}\n            type=\"text\"\n            placeholder=\"title\"\n          />{\" \"}\n          <br />\n        </div>\n\n        <div>\n          <label htmlFor=\"\">User ID</label>\n          <input\n            onChange={(e) => handle(e)}\n            id=\"userId\"\n            value={TodoForm.userId}\n            type=\"text\"\n            placeholder=\"User Id\"\n          />{\" \"}\n          <br />\n        </div>\n\n        <div>\n          <label htmlFor=\"isCompleted\">True : </label>\n          <input\n            onChange={(e) =>\n              setTodoForm((prev) => ({\n                ...prev,\n                isCompleted: e.target.checked,\n              }))\n            }\n            value={TodoForm.isCompleted}\n            id=\"isCompleted\"\n            type=\"radio\"\n            name=\"isCompleted\"\n          />\n\n          <label htmlFor=\"isCompleted2\">False</label>\n          <input\n            onChange={(e) =>\n              setTodoForm((prev) => ({ ...prev, isCompleted: false }))\n            }\n            type=\"radio\"\n            id=\"isCompleted\"\n            name=\"isCompleted\"\n          />\n        </div>\n\n        <button style={{ border: \"3px solid blue\", margin: \"20px\" }}>\n          Save\n        </button>\n      </form>\n      {todos?.length ? (\n         <div >\n         <List className=\"mt-3 row\">\n             {todos.map((todo) => (\n                 <TodoCard todo={todo} />\n             ))}\n         </List>\n     </div>\n      ) : (\n        <CircularProgress />\n      )}\n    </>\n  );\n}\nconst List = styled(Row)`\n  width: auto;\n  display: flex;\n  flex-wrap: wrap;\n  /* justify-content: center; */\n  margin: 0 0 1rem 2rem;\n  margin:0 ;\n  padding: 0 3rem;\n`\nexport default Todos;\n\n","/Users/mac/Desktop/todo-front/todoNetlify/src/component/SignUpUser.jsx",[],[],"/Users/mac/Desktop/todo-front/todoNetlify/src/component/Login.jsx",[],[],"/Users/mac/Desktop/todo-front/todoNetlify/src/component/UserProfile.jsx",[],[],"/Users/mac/Desktop/todo-front/todoNetlify/src/component/Todo.jsx",["67","68"],[],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Col } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nconst Todo = () => {\n  const { id } = useParams();\n  const [TodoDetails, SetTodoDetails] = useState({});\n\n  useEffect(() => {\n    axios.get(`https://jsonplaceholder.typicode.com/todos/${id}`).then((res) => {\n      const responseTodo = res.data;\n      SetTodoDetails(responseTodo);\n    });\n  }, []);\n\n  console.log(TodoDetails, \"hellooo \");\n  const { userId, title, completed } = TodoDetails?.todoss\n    ? TodoDetails?.todoss\n    : TodoDetails;\n  console.log(title);\n    return (\n        <Col xl={12}>\n            <StyledCard className=\"mt-5\">\n                <div >\n                  <img  style={{width:\"10rem\", height:\"10rem\"}} src=\"https://media.istockphoto.com/id/1219481917/photo/good-job-youre-the-man-well-done-way-to-go-write-on-a-sticky-note-isolated-on-office-desk.jpg?s=612x612&w=0&k=20&c=yBjUbyf72Z81fJYyQzl-2863aLCMxuUKlbi5eUu_Umg=\" alt=\"\" />\n                    <div className=\"ml-4 mt-3\">\n                        <h4 style={{ fontSize: \"21px\", fontWeight: \"600\" }}>Title: {title}</h4>\n                        <div >\n                                <p>{`Is todo completed : ${completed}`}</p>\n                        </div>\n                    </div>\n                </div>\n                <ButtonContainer>\n                    <Button className=\"text-center\" style={{ cursor: 'pointer' }}>Todo Completed</Button>\n                </ButtonContainer>\n            </StyledCard>\n        </Col>\n    )\n}\nconst StyledCard = styled.div`\n    border-radius: 40px;\n    background: #FFFFFF;\n    width: 44%;\n    margin-left:25%;\n    margin-top:10%;\n    height: auto;\n    justify-content: space-between;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px, rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n    p{\n        font-size: 15px;\n        b{\n            color:#d61b1b ;\n            color: ${({ theme }) => theme.Tab?.color || '#D61B1B'}\n        }\n    }\n`\nconst ButtonContainer = styled.div`\n    display: flex;\n    justify-content: end;\n    margin-top: 1rem;\n`\nconst Button = styled.div`\n    border: 1px ;\n    width: 125px;\n    background: #eef6a596;\n    background: ${({ theme }) => theme.Tab?.color + '82'};\n    padding: 10px;\n    font-size: 20px;\n    font-weight: bold;\n    border-top-left-radius: 37px;\n    border-bottom-right-radius: 22  px;\n`\nexport default Todo\n","/Users/mac/Desktop/todo-front/todoNetlify/src/contexts/TodosContext.jsx",[],[],"/Users/mac/Desktop/todo-front/todoNetlify/src/component/TodoCard.jsx",[],[],"/Users/mac/Desktop/todo-front/todoNetlify/src/Invoice/InvoiceContext/invoiceContext.js",["69","70"],[],{"ruleId":"71","severity":1,"message":"72","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":12},{"ruleId":"71","severity":1,"message":"75","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"76","line":3,"column":28,"nodeType":"73","messageId":"74","endLine":3,"endColumn":32},{"ruleId":"71","severity":1,"message":"77","line":7,"column":10,"nodeType":"73","messageId":"74","endLine":7,"endColumn":22},{"ruleId":"71","severity":1,"message":"78","line":14,"column":9,"nodeType":"73","messageId":"74","endLine":14,"endColumn":17},{"ruleId":"71","severity":1,"message":"79","line":48,"column":12,"nodeType":"73","messageId":"74","endLine":48,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":15,"column":6,"nodeType":"82","endLine":15,"endColumn":8,"suggestions":"83"},{"ruleId":"71","severity":1,"message":"84","line":18,"column":11,"nodeType":"73","messageId":"74","endLine":18,"endColumn":17},{"ruleId":"71","severity":1,"message":"85","line":26,"column":11,"nodeType":"73","messageId":"74","endLine":26,"endColumn":16},{"ruleId":"71","severity":1,"message":"86","line":26,"column":19,"nodeType":"73","messageId":"74","endLine":26,"endColumn":27},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'todosContext' is defined but never used.","'navigate' is assigned a value but never used.","'getAll' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["87"],"'userId' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.",{"desc":"88","fix":"89"},"Update the dependencies array to be: [id]",{"range":"90","text":"91"},[498,500],"[id]"]